/****************************************************************
*                     КАФЕДРА № 304 1 КУРС                      *
*---------------------------------------------------------------*
* Project Type  : GNU/Linux Console Application                 *
* Project Name  : proj_3                                        *
* File Name     : main.cpp                                      *
* Language      : C/C++                                         *
* Programmer(s) : Егоров А.В (swrneko), Федоров А.И.            *
* Modifyed By   : Егоров А.В (swrneko)                          *
* Edited by     : Neovim, Visual Studio                         *
* OS            : Arch Linux, Windows 11                        *
* Github url    : https://github.com/swrneko/mai_shit.git       *
* Created       : 03.12/24                                      *
* Last Revision : 10/12/24                                      *
* Comment(s)    : Одномерные массивы.                           *
****************************************************************/

/****************************************
* Подключение препроцессора и библиотек *
****************************************/
#include <iostream>
#include <fstream>
using namespace std;

int main() {
  /************************
  * Объявление переменных *
  ************************/
  float N; // Значение N
  float M; // Значение M
  const int SIZE=24; // Размер входного массива
  float IVECT[SIZE]; // Задание размера входного массива
  float NEWVEC[SIZE/2]; // Задание размера нового массива
  float sum; // Сумма последних M элементов нового массива
  float max_value; // Значение наибольшего элемента из N последних
  float max_index; // Порядковый номер наибольшего элемента из N последних

  /* Инициализация файла */
  ifstream SourceFile;
  SourceFile.open("files/source.txt");

  /* Проверка файла на фозможность открытия */
  if (!SourceFile.is_open()) {
    cout << "Ошибка: Неудалось прочитать файл." << endl;
    SourceFile.close();
    exit(1);
  }
  
  /* Проверка на ошибку при чтении файла */
  if (SourceFile.fail()) {
    cout << "Ошибка чтения файла." << endl;
    SourceFile.close();
    exit(1);
  }

  SourceFile >> N;
  /* Проверка файла на пустоту */
  if (SourceFile.eof()) {
    cout << "Ошибка: Файл пуст." << endl;
    SourceFile.close();
    exit(1);
  }

  /* Запись данных из файла в переменные */
  SourceFile >> M;

  /*******************
  * Входной контроль *
  *******************/

  /* Проверка значение N на условие > 0*/
  if (N <= 0) {
    cout << "Значение N должно быть больше 0." << endl;
    SourceFile.close();
    exit(1);
  }
  
  /* Проверка значение N на условие < SIZE/2*/
  if (N > SIZE/2.0) {
    cout << "Значение N должно быть меньше SIZE/2." << endl;
    SourceFile.close();
    exit(1);
  }

  /* Проверка значение M на условие > 0*/
  if (M <= 0) {
    cout << "Значение M должно быть больше 0." << endl;
    SourceFile.close();
    exit(1);
  }

  /* Проверка значение M на условие < SIZE/2*/
  if (M > SIZE/2.0) {
    cout << "Значение M должно быть меньше SIZE/2." << endl;
    SourceFile.close();
    exit(1);
  }

  /***************************
  * Входной контроль пройден *
  ***************************/

  /* Инициализация переменных */
  sum=0; 
  max_value=0; 
  max_index=0; 

  /* Запись входных данных из файла в массив */
  for (int i = 0; i < SIZE; i++) {
    SourceFile >> IVECT[i];
  }

  /* Печать начальной строчки вывода нового массива */
  cout << "NEWVEC:  ";

  /****************************
  * Нахождение нового массива *
  ****************************/
  
  for (int i=0; i < SIZE/2; i++) {
    NEWVEC[i] = ((IVECT[i+2] + IVECT[SIZE - (i+2)])/2) + ((M + N)/2); // Формирование элементов нового массива

    /* Печать начального и последующих элементов нового массива */
    if (i < SIZE/2 - 1) {
      cout << NEWVEC[i] << ", ";
    }

    /* Печать конечного элемента нового массива */
    if (i == SIZE/2 - 1) {
      cout << NEWVEC[i] << endl;
    }

    /* Нахождение максимального элемента в массиве */
    if (NEWVEC[i] > N) {

      /* Задаём первый максимальный элемент массива */
      if (max_value == N) { 
        max_value = NEWVEC[i];
        max_index = i;
      }

      /* Находим максимальный элемент массива */
      if (NEWVEC[i] > max_value) {
        max_value = NEWVEC[i];
        max_index = i;
      }
    }
    
    /* Суммирование последних M эллементов нового массива */
    if (i > M) {
      sum += NEWVEC[i];
    }
  }

  /******************************
  * Вывод полученной информации *
  ******************************/
  cout << "Сумма последних M элементов: " << sum << endl;
  cout << "Порядковый номер max значения из последних N элементов: " << max_index + 1 << endl;
  cout << "Значение max элемента из последних N элементов: " << max_value << endl;
  
  exit(0);
}
